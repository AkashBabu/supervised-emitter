# Table of contents

## GETTING STARTED

<%= rootFiles
  .sort((a,b) => a.priority - b.priority)
  .map(file => {
    return `* [${file.name}](${file.location})`
  })
  .join('\n')
%>


<%= folders
  .sort((a,b) => a.priority - b.priority)
  .map(folder => {
    return `
## ${folder.name.toUpperCase()}

${folder.files
  .map(file => {
    return `* [${file.name}](${file.location})`
  })
  .join('\n')
    `}
})
%>

## BASICS

* [Usage](basics/usage.md)
* [Step by Step tutorial](basics/step-by-step-tutorial.md)



<!-- * [Internal Events](internal-events.md) -->

<!-- ## Recipe

* [Code Splitting](recipe/code-splitting.md)
* [Custom Middlewares](recipe/custom-middlewares.md) -->

------

* [API Docs](apidocs/README.md)
  * interfaces
    * [isupervisedemitter](apidocs/interfaces/isupervisedemitter.md)
    * [ioptions](apidocs/interfaces/ioptions.md)
    * [isubscription](apidocs/interfaces/isubscription.md)
    * [icontext](apidocs/interfaces/icontext.md)
  * classes
    * [supervisedemitter](apidocs/classes/supervisedemitter.md)

---------

<%= ungroupedFiles
  .sort((a,b) => a.priority - b.priority)
  .map(file => {
    return `* [${file.name}](${file.location})`
  })
  .join('\n')
%>
